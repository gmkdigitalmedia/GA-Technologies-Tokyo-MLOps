version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.fixed
    ports:
      - "2223:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ga_platform
      - REDIS_URL=redis://redis:6379
      - SNOWFLAKE_ACCOUNT=${SNOWFLAKE_ACCOUNT:-}
      - SNOWFLAKE_USER=${SNOWFLAKE_USER:-}
      - SNOWFLAKE_PASSWORD=${SNOWFLAKE_PASSWORD:-}
      - SNOWFLAKE_DATABASE=${SNOWFLAKE_DATABASE:-GA_TECHNOLOGIES_DW}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./models:/app/models
      - ./data:/app/data

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ga_platform
    ports:
      - "2224:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "2225:6379"

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile.fixed
    command: celery -A app.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ga_platform
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./models:/app/models
      - ./data:/app/data

  mlflow:
    image: python:3.9
    command: >
      bash -c "pip install mlflow==2.8.1 psycopg2-binary &&
               mlflow server
               --backend-store-uri postgresql://postgres:password@postgres:5432/ga_platform
               --default-artifact-root ./mlflow-artifacts
               --host 0.0.0.0
               --port 5000"
    ports:
      - "2226:5000"
    depends_on:
      - postgres
    volumes:
      - mlflow_artifacts:/mlflow-artifacts

  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "2227:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "2228:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  # Dify services for LLM workflows
  dify-db:
    image: postgres:15
    environment:
      - POSTGRES_USER=dify
      - POSTGRES_PASSWORD=difypassword
      - POSTGRES_DB=dify
    volumes:
      - dify_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dify"]
      interval: 30s
      timeout: 10s
      retries: 5

  dify-redis:
    image: redis:7-alpine
    volumes:
      - dify_redis_data:/data

  dify-sandbox:
    image: langgenius/dify-sandbox:0.2.1
    environment:
      - API_KEY=dify-sandbox
      - GIN_MODE=release
      - WORKER_TIMEOUT=15
    volumes:
      - dify_sandbox_data:/var/lib/sandbox/data

  dify-api:
    image: langgenius/dify-api:0.6.13
    environment:
      - MODE=api
      - LOG_LEVEL=INFO
      - SECRET_KEY=sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U
      - DATABASE_URL=postgresql://dify:difypassword@dify-db:5432/dify
      - REDIS_URL=redis://dify-redis:6379
      - CELERY_BROKER_URL=redis://dify-redis:6379/1
      - CODE_EXECUTION_ENDPOINT=http://dify-sandbox:8194
      - CODE_EXECUTION_API_KEY=dify-sandbox
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
    ports:
      - "2229:5001"
    depends_on:
      dify-db:
        condition: service_healthy
      dify-redis:
        condition: service_started
    volumes:
      - dify_api_data:/app/api/storage

  dify-worker:
    image: langgenius/dify-api:0.6.13
    environment:
      - MODE=worker
      - LOG_LEVEL=INFO
      - SECRET_KEY=sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U
      - DATABASE_URL=postgresql://dify:difypassword@dify-db:5432/dify
      - REDIS_URL=redis://dify-redis:6379
      - CELERY_BROKER_URL=redis://dify-redis:6379/1
      - CODE_EXECUTION_ENDPOINT=http://dify-sandbox:8194
      - CODE_EXECUTION_API_KEY=dify-sandbox
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
    depends_on:
      dify-db:
        condition: service_healthy
      dify-redis:
        condition: service_started
    volumes:
      - dify_api_data:/app/api/storage

  dify-web:
    image: langgenius/dify-web:0.6.13
    environment:
      - CONSOLE_URL=${CONSOLE_URL:-}
    ports:
      - "2230:3000"
    depends_on:
      dify-db:
        condition: service_healthy

volumes:
  postgres_data:
  mlflow_artifacts:
  grafana_data:
  dify_db_data:
  dify_redis_data:
  dify_sandbox_data:
  dify_api_data: